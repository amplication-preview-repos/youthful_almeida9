/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssignmentWhereUniqueInput } from "../../assignment/base/AssignmentWhereUniqueInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { AssignmentUpdateManyWithoutAgentsInput } from "./AssignmentUpdateManyWithoutAgentsInput";
import { PropertyUpdateManyWithoutAgentsInput } from "./PropertyUpdateManyWithoutAgentsInput";

@InputType()
class AgentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AssignmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AssignmentWhereUniqueInput)
  @IsOptional()
  @Field(() => AssignmentWhereUniqueInput, {
    nullable: true,
  })
  assignment?: AssignmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => AssignmentUpdateManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => AssignmentUpdateManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => AssignmentUpdateManyWithoutAgentsInput, {
    nullable: true,
  })
  assignments?: AssignmentUpdateManyWithoutAgentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => PropertyUpdateManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => PropertyUpdateManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => PropertyUpdateManyWithoutAgentsInput, {
    nullable: true,
  })
  properties?: PropertyUpdateManyWithoutAgentsInput;
}

export { AgentUpdateInput as AgentUpdateInput };
